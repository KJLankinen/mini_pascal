- testaaminen, eli useiden eri pascal ohjelmien kirjoittaminen
- koodin emitter
- webassembly:
    - arrayt/stringit: miten toimii?    --> lineaarista muistia, johon raakaa bytedataa
    - print ja read?                    --> käytetään wasin fd_read ja fd_write apunfunktiota.
    - "main block" tai entry point      --> start osoittaa funktioon, joka on main block
    - lexical nesting?                  --> blockit toimii samoin kuin pascalissa, ei ole nestattuja funkkareita
    - var, eli pass-by-reference        --> 
    - rekursio?                         --> onnistuu
    - assert, eli onko "goto exit"?     --> unreachable tuottaa trapin, joka toimii sopivasti

- kirjoitettavaa webassemblykoodia:
    - string bufferista erikseen arvot omille paikoilleen, kun on tiedossa niiden tyypit
    - assert-funktio, joka käyttää unreachablea ja osaa tulostaa expressionin, rivin ja tiedoston.

- serialisoidun puurakenteen parantelu: helpompaa nähdä, jos jokin on vialla
- predefined identifiers miettiminen ja lisääminen
